buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
//        classpath "gradle.plugin.com.github.spotbugs.snom:spotbugs-gradle-plugin:4.7.5"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${revKotlin}"
    }
}

apply plugin: 'kotlin'

configurations.all {
    compileKotlin {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11

        kotlinOptions {
            jvmTarget = "11"
        }
    }

    compileTestKotlin {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11

        kotlinOptions {
            jvmTarget = "11"
        }
    }
//    exclude group: 'amazon', module: 'aws-java-sdk'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${revKotlin}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-common:${revKotlin}"

    implementation("io.ktor:ktor-client-core:${revKtor}")
    implementation("io.ktor:ktor-client-okhttp:${revKtor}")

    implementation("io.ktor:ktor-client-content-negotiation:${revKtor}")
    implementation("io.ktor:ktor-serialization-jackson:${revKtor}")
//    implementation("io.ktor:ktor-serialization-kotlinx-json:${revKtor}")

    implementation "com.nhaarman:mockito-kotlin:${revMockitoKotlin}"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:${revCoroutines}"

    compileOnly 'org.jetbrains:annotations:23.0.0'

    implementation "com.netflix.conductor:conductor-common:${revConductor}"
    implementation "com.sun.jersey:jersey-client:${revJersey}"

    implementation "com.netflix.archaius:archaius-core:0.7.6"
    implementation "com.netflix.spectator:spectator-api:${revSpectator}"

    implementation ("com.netflix.eureka:eureka-client:${revEurekaClient}") {
        exclude group: 'com.google.guava', module: 'guava'
    }
    implementation "com.amazonaws:aws-java-sdk-core:${revAwsSdk}"

    implementation "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"

    implementation "org.apache.commons:commons-lang3"
    implementation "commons-io:commons-io:${revCommonsIo}"

    implementation "org.slf4j:slf4j-api"
    implementation "io.github.oshai:kotlin-logging-jvm:${revKotlinLogging}"

//    testImplementation "org.powermock:powermock-module-junit4:${revPowerMock}"
    testImplementation "org.powermock:powermock-api-mockito2:${revPowerMock}"

    testImplementation "org.spockframework:spock-core:${revSpock}"
    testImplementation "org.spockframework:spock-spring:${revSpock}"

    testImplementation "org.jetbrains.kotlin:kotlin-test:${revKotlin}"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit5:${revKotlin}"
    testImplementation "io.ktor:ktor-client-mock:${revKtor}"
    testImplementation "io.mockk:mockk:${revMockk}"
}